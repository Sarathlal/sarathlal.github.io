<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="https://sarathlal.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://sarathlal.com/" rel="alternate" type="text/html" /><updated>2020-02-13T22:33:08+05:30</updated><id>https://sarathlal.com/</id><title type="html">Sarathlal N</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</subtitle><entry><title type="html">Redirect single pages of post type in to post type archive page - WordPress</title><link href="https://sarathlal.com/redirect-single-pages-to-post-type-archive-page-wordpress/" rel="alternate" type="text/html" title="Redirect single pages of post type in to post type archive page - WordPress" /><published>2019-08-03T00:00:00+05:30</published><updated>2019-08-03T00:00:00+05:30</updated><id>https://sarathlal.com/redirect-single-pages-to-post-type-archive-page-wordpress</id><content type="html" xml:base="https://sarathlal.com/redirect-single-pages-to-post-type-archive-page-wordpress/">&lt;p&gt;In WordPress, if our post type is public, in default, a single page view will be available for all posts in that post type.&lt;/p&gt;

&lt;p&gt;If we don’t need a single view of post type, it is better to make post type, not as public. In &lt;code class=&quot;highlighter-rouge&quot;&gt;register_post_type&lt;/code&gt; hook, there is an argument called &lt;code class=&quot;highlighter-rouge&quot;&gt;public&lt;/code&gt; &amp;amp; we have to set that value as false.&lt;/p&gt;

&lt;p&gt;But now I need to make one of my custom post types as public &amp;amp; the same time, I need to remove the single page view of that custom post type. Below you can find the code snippet that I have used for that purpose.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;add_action( 'template_redirect', function() {
	$post_type = 'board_member';
	if ( is_singular($post_type) ) {
		global $post;
		$redirectLink = get_post_type_archive_link( $post_type );
		wp_redirect( $redirectLink, 302 );
		exit;
	}
});
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="WordPress" /><summary type="html">In WordPress, if our post type is public, in default, a single page view will be available for all posts in that post type.</summary></entry><entry><title type="html">Get details about available image sizes - WordPress</title><link href="https://sarathlal.com/get-details-available-image-sizes-wordpress/" rel="alternate" type="text/html" title="Get details about available image sizes - WordPress" /><published>2019-08-02T00:00:00+05:30</published><updated>2019-08-02T00:00:00+05:30</updated><id>https://sarathlal.com/get-details-available-image-sizes-wordpress</id><content type="html" xml:base="https://sarathlal.com/get-details-available-image-sizes-wordpress/">&lt;p&gt;Recently, when I develop a WordPress theme, I need details about all available image sizes for the theme customizer module. I need details about custom image sizes added by other plugins (Eg. WooCommerce etc) &amp;amp; default WordPress image sizes.&lt;/p&gt;

&lt;p&gt;The WordPress core doesn’t have a native method for getting all the details. So I used the below function.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/**
 * Get all the registered image sizes along with their dimensions
 *
 * @global array $_wp_additional_image_sizes
 *
 * @link http://core.trac.wordpress.org/ticket/18947 Reference ticket
 *
 * @return array $image_sizes The image sizes
 */
function _get_all_image_sizes() {
	global $_wp_additional_image_sizes;

	$default_image_sizes = get_intermediate_image_sizes();

	foreach ( $default_image_sizes as $size ) {
		$image_sizes[ $size ][ 'width' ] = intval( get_option( &quot;{$size}_size_w&quot; ) );
		$image_sizes[ $size ][ 'height' ] = intval( get_option( &quot;{$size}_size_h&quot; ) );
		$image_sizes[ $size ][ 'crop' ] = get_option( &quot;{$size}_crop&quot; ) ? get_option( &quot;{$size}_crop&quot; ) : false;
	}

	if ( isset( $_wp_additional_image_sizes ) &amp;amp;&amp;amp; count( $_wp_additional_image_sizes ) ) {
		$image_sizes = array_merge( $image_sizes, $_wp_additional_image_sizes );
	}

	return $image_sizes;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The output will be an array like below one.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Array
(
	[thumbnail] =&amp;gt; Array
		(
			[width] =&amp;gt; 150
			[height] =&amp;gt; 150
			[crop] =&amp;gt; 1
		)

	[medium] =&amp;gt; Array
		(
			[width] =&amp;gt; 300
			[height] =&amp;gt; 300
			[crop] =&amp;gt; 
		)

	[medium_large] =&amp;gt; Array
		(
			[width] =&amp;gt; 768
			[height] =&amp;gt; 0
			[crop] =&amp;gt; 
		)

	[large] =&amp;gt; Array
		(
			[width] =&amp;gt; 1024
			[height] =&amp;gt; 1024
			[crop] =&amp;gt; 
		)

)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="WordPress" /><summary type="html">Recently, when I develop a WordPress theme, I need details about all available image sizes for the theme customizer module. I need details about custom image sizes added by other plugins (Eg. WooCommerce etc) &amp;amp; default WordPress image sizes.</summary></entry><entry><title type="html">Change shipping and billing address title - WooCommerce</title><link href="https://sarathlal.com/change-shipping-billing-address-title-woocommerce/" rel="alternate" type="text/html" title="Change shipping and billing address title - WooCommerce" /><published>2019-07-31T00:00:00+05:30</published><updated>2019-07-31T00:00:00+05:30</updated><id>https://sarathlal.com/change-shipping-billing-address-title-woocommerce</id><content type="html" xml:base="https://sarathlal.com/change-shipping-billing-address-title-woocommerce/">&lt;p&gt;&lt;img src=&quot;/images/2019/7/change-billing-shipping-address-title-woocommerce.gif&quot; alt=&quot;Change shipping and billing address title - WooCommerce&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you like to modify the title of the addresses on the “My Account” page for WooCommerce.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;add_filter( 'woocommerce_my_account_get_addresses', 'er45d_woo_change_title_account' );
function er45d_woo_change_title_account( $account_title ) {
	$account_title = array(
		'billing' =&amp;gt; __( 'New Billing Address', 'text-domain' ),
		'shipping' =&amp;gt; __( 'New Shipping Address', 'text-domain' ),
	);
	
	return $account_title;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="WooCommerce" /><category term="WordPress" /><summary type="html"></summary></entry><entry><title type="html">Add phone number to the output of the addresses on the “My Account” page - WooCommerce</title><link href="https://sarathlal.com/add-phone-number-output-addresses-my-account-page-woocommerce/" rel="alternate" type="text/html" title="Add phone number to the output of the addresses on the &quot;My Account&quot; page - WooCommerce" /><published>2019-07-30T00:00:00+05:30</published><updated>2019-07-30T00:00:00+05:30</updated><id>https://sarathlal.com/add-phone-number-output-addresses-my-account-page-woocommerce</id><content type="html" xml:base="https://sarathlal.com/add-phone-number-output-addresses-my-account-page-woocommerce/">&lt;p&gt;&lt;img src=&quot;/images/2019/7/add-phone-number-output-addresses-my-account-page-woocommerce.gif&quot; alt=&quot;Add phone number to the output of the addresses on the &amp;quot;My Account&amp;quot; page - WooCommerce&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We need to add 3 filters to modify the output of the addresses on the “My Account” page/shortcode for WooCommerce.&lt;/p&gt;

&lt;p&gt;First, we will need to use &lt;code class=&quot;highlighter-rouge&quot;&gt;woocommerce_my_account_my_address_formatted_address&lt;/code&gt; to populate any new values we want to add.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;add_filter( 'woocommerce_my_account_my_address_formatted_address', 'er34d_formatted_address',10, 3 );

function er34d_formatted_address( $args, $customer_id, $name ){
	// the phone is saved as billing_phone and shipping_phone
	$args['phone'] = get_user_meta( $customer_id, $name . '_phone', true );
	return $args;
} 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Next use &lt;code class=&quot;highlighter-rouge&quot;&gt;woocommerce_localisation_address_formats&lt;/code&gt; to modify the formatting of the address. We have do this as per country locale. But now I ignore that condition.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// modify the address formats
add_filter( 'woocommerce_localisation_address_formats', '3e45_localisation_address_formats');

function 3e45_localisation_address_formats( $formats ){
	foreach ( $formats as $key =&amp;gt; &amp;amp;$format ) {
		// put a break and then the phone after each format.
		$format .= &quot;\n{phone}&quot;;
	}
	return $formats;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Last, we need to update &lt;code class=&quot;highlighter-rouge&quot;&gt;woocommerce_formatted_address_replacements&lt;/code&gt; to have WooCommerce replace your replacement string with the actual data.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// add the replacement value
add_filter( 'woocommerce_formatted_address_replacements', '3er45_formatted_address_replacements', 10, 2 );

function 3er45_formatted_address_replacements( $replacements, $args ){
	// we want to replace {phone} in the format with the data we populated
	$replacements['{phone}'] = $args['phone'];
	return $replacements;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="WooCommerce" /><category term="WordPress" /><summary type="html"></summary></entry><entry><title type="html">Conditional tags for order thank you page - WooCommerce</title><link href="https://sarathlal.com/conditional-tag-order-thank-you-page-woocommerce/" rel="alternate" type="text/html" title="Conditional tags for order thank you page - WooCommerce" /><published>2019-07-28T00:00:00+05:30</published><updated>2019-07-28T00:00:00+05:30</updated><id>https://sarathlal.com/conditional-tag-order-thank-you-page-woocommerce</id><content type="html" xml:base="https://sarathlal.com/conditional-tag-order-thank-you-page-woocommerce/">&lt;p&gt;In WooCommerce, if you need to check that current page is an order thank you page, you can  use below conditional tags in your code.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;is_order_received_page()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;is_wc_endpoint_url( 'order-received' )&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="WooCommerce" /><summary type="html">In WooCommerce, if you need to check that current page is an order thank you page, you can use below conditional tags in your code.</summary></entry><entry><title type="html">Get WordPress image element from attachment URL - WordPress</title><link href="https://sarathlal.com/get-wordpress-image-element-from-attachment-url/" rel="alternate" type="text/html" title="Get WordPress image element from attachment URL - WordPress" /><published>2019-07-25T00:00:00+05:30</published><updated>2019-07-25T00:00:00+05:30</updated><id>https://sarathlal.com/get-wordpress-image-element-from-attachment-url</id><content type="html" xml:base="https://sarathlal.com/get-wordpress-image-element-from-attachment-url/">&lt;p&gt;If we have an image URL, we can easily make it an HTML image tag. But when we deal with WordPress, it is always better to use WordPress functions to render an image element.&lt;/p&gt;

&lt;p&gt;So now consider that we have an image URL.&lt;/p&gt;

&lt;h3 id=&quot;step-1---get-attachment-id-from-image-url&quot;&gt;Step 1 - Get attachment ID from image URL&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$attachment_id = attachment_url_to_postid( 'http://example.com/wp-content/uploads/2019/05/castle-old.jpg' );
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;step-2---get-image-html-tag-from-attachment-id&quot;&gt;Step 2 - Get image HTML tag from attachment ID&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wp_get_attachment_image ( $attachment_id, string|array $size = 'thumbnail', false, '' );
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="WordPress" /><summary type="html">If we have an image URL, we can easily make it an HTML image tag. But when we deal with WordPress, it is always better to use WordPress functions to render an image element.</summary></entry><entry><title type="html">Handle plugin activation hook in multisite &amp;amp; single site - WordPress</title><link href="https://sarathlal.com/handle-plugin-activation-hook-multisite-single-site-wordpress/" rel="alternate" type="text/html" title="Handle plugin activation hook in multisite &amp; single site - WordPress" /><published>2019-03-30T00:00:00+05:30</published><updated>2019-03-30T00:00:00+05:30</updated><id>https://sarathlal.com/handle-plugin-activation-hook-multisite-single-site-wordpress</id><content type="html" xml:base="https://sarathlal.com/handle-plugin-activation-hook-multisite-single-site-wordpress/">&lt;p&gt;Do actions on plugin activation is an important task in all WordPress plugin. If we do some tweaks or save some data in the database during activation, handling plugin activation hook is too important.&lt;/p&gt;

&lt;p&gt;If WordPress installation is a single site, we have to do the task in the installed WordPress itself on activation hook. For a multisite, normally we need to do the same task in all network site on activation hook.&lt;/p&gt;

&lt;p&gt;Below you can find the code snippet to handle tasks in plugin activation for single site &amp;amp; multisite instance.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;register_activation_hook( __FILE__, '1345_activation_logic' );

public static function 1345_activation_logic($network_active){
	// If multisite
	if ( function_exists( 'is_multisite' ) &amp;amp;&amp;amp; is_multisite() ) {
			// If network activate, iterate through each site
			if ( $network_active ) {
					if ( false == is_super_admin() ) {
							return;
					}

					$blogs = get_sites(); // default count is 100
					foreach ( $blogs as $blog ) {
						$blog_id = $blog-&amp;gt;blog_id;
						switch_to_blog( $blog_id );
						do_activation_hook(); // do your activation hook
						restore_current_blog();
					}
			// single site activation in multisite
			} else {
					if ( false == current_user_can( 'activate_plugins' ) ) {
							return;
					}

					do_activation_hook(); // do your activation hook
			}
	// Normal WordPress plugin activation
	} else {
			do_activation_hook(); // do your activation hook
	}
}


// Action for creating new site in mulisite setup

public static function 145561_activate_new_blog($blog_id) {
	if (is_plugin_active_for_network(plugin_basename(__FILE__))) {
		switch_to_blog($blog_id);
		// do action for $blog_id
		restore_current_blog();
	}
}
add_action('wpmu_new_blog', '145561_activate_new_blog');
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="WordPress" /><summary type="html">Do actions on plugin activation is an important task in all WordPress plugin. If we do some tweaks or save some data in the database during activation, handling plugin activation hook is too important.</summary></entry><entry><title type="html">Get WordPress SQL query details</title><link href="https://sarathlal.com/get-wordpress-sql-query-details/" rel="alternate" type="text/html" title="Get WordPress SQL query details" /><published>2019-03-23T00:00:00+05:30</published><updated>2019-03-23T00:00:00+05:30</updated><id>https://sarathlal.com/get-wordpress-sql-query-details</id><content type="html" xml:base="https://sarathlal.com/get-wordpress-sql-query-details/">&lt;p&gt;When I debug WordPress, getting SQL query details is useful in some situations.&lt;/p&gt;

&lt;p&gt;In the WordPress plugin repo, we can find some nice debug plugins to get query details. Also, we can use default WordPress options to get query details.&lt;/p&gt;

&lt;p&gt;First, we need to add a definition in our &lt;code class=&quot;highlighter-rouge&quot;&gt;wp-config.php&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;define('SAVEQUERIES', true);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The SAVEQUERIES definition saves the database queries to an array and we can use that array to analyze those queries.&lt;/p&gt;

&lt;p&gt;The array is stored in the global &lt;code class=&quot;highlighter-rouge&quot;&gt;$wpdb-&amp;gt;queries&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;print-last-sql-query-string&quot;&gt;Print last SQL query string&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$wpdb-&amp;gt;last_query
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;print-last-sql-query-result&quot;&gt;Print last SQL query result&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$wpdb-&amp;gt;last_result
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;print-last-sql-query-error&quot;&gt;Print last SQL query Error&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$wpdb-&amp;gt;last_error
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="WordPress" /><summary type="html">When I debug WordPress, getting SQL query details is useful in some situations.</summary></entry><entry><title type="html">Remove edit, view, trash and quick edit links within posts list of admin screen - WordPress</title><link href="https://sarathlal.com/remove-edit-view-trash-quick-edit-links-posts-list-admin-screen-wordpress/" rel="alternate" type="text/html" title="Remove edit, view, trash and quick edit links within posts list of admin screen - WordPress" /><published>2018-09-05T00:00:00+05:30</published><updated>2018-09-05T00:00:00+05:30</updated><id>https://sarathlal.com/remove-edit-view-trash-quick-edit-links-posts-list-admin-screen-wordpress</id><content type="html" xml:base="https://sarathlal.com/remove-edit-view-trash-quick-edit-links-posts-list-admin-screen-wordpress/">&lt;p&gt;&lt;img src=&quot;/images/2018/edit-view-trash-quick-edit-links-posts-wordpress.png&quot; alt=&quot;Remove edit, view, trash and quick edit links - WordPress&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Use below code snippet to remove the edit, view, trash and quick edit links that we seen when we mouse over a post in the post list in admin screens.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;add_filter( 'post_row_actions', 'remove_row_actions', 10, 1 );

function remove_row_actions( $actions ){
	// Confirm post type
	if( get_post_type() === 'post' ){
		unset( $actions['edit'] );
		unset( $actions['view'] );
		unset( $actions['trash'] );
		unset( $actions['inline hide-if-no-js'] );
	}    
	return $actions;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="WordPress" /><summary type="html"></summary></entry><entry><title type="html">PHP Errors not displaying or not logging - LAMP server - Solved</title><link href="https://sarathlal.com/php-errors-not-displaying-not-logging-lamp-server-mint-linux/" rel="alternate" type="text/html" title="PHP Errors not displaying or not logging - LAMP server - Solved" /><published>2018-09-04T00:00:00+05:30</published><updated>2018-09-04T00:00:00+05:30</updated><id>https://sarathlal.com/php-errors-not-displaying-not-logging-lamp-server-mint-linux</id><content type="html" xml:base="https://sarathlal.com/php-errors-not-displaying-not-logging-lamp-server-mint-linux/">&lt;p&gt;I have to set up a new LAMP server in Linux &lt;code class=&quot;highlighter-rouge&quot;&gt;Mint 19&lt;/code&gt; on yesterday for WP development.&lt;/p&gt;

&lt;p&gt;The configurations are,&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Apache&lt;/li&gt;
  &lt;li&gt;PHP 7&lt;/li&gt;
  &lt;li&gt;MySQL 5&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Later half an hour, I realize that PHP errors are not displaying or not logging.&lt;/p&gt;

&lt;p&gt;The issue is due to configuration in PHP configuration file.&lt;/p&gt;

&lt;p&gt;Solved it by updating 2 &lt;code class=&quot;highlighter-rouge&quot;&gt;php.ini&lt;/code&gt; files. The files location are given below. May the file path will different as per our OS, Apache &amp;amp; PHP version.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/etc/php/7.2/apache2/php.ini 
/etc/php/7.2/cli/php.ini 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The configurations are given below. We need to find out the line of configuration and update the values. There is chance for multiple lines for same configuration.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;display_errors = On
track_errors = On
log_errors = On
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then need to restart Apache.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo service apache2 restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If still facing issue on error reporting, restart the server.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;reboot
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="LAMP Server" /><summary type="html">I have to set up a new LAMP server in Linux Mint 19 on yesterday for WP development.</summary></entry></feed>