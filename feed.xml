<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="https://sarathlal.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://sarathlal.com/" rel="alternate" type="text/html" /><updated>2020-04-09T21:08:16+05:30</updated><id>https://sarathlal.com/</id><title type="html">Sarathlal N</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</subtitle><entry><title type="html">Action hooks that trigger on, before or after add, update or delete actions of option - WordPress</title><link href="https://sarathlal.com/action-hooks-trigger-on-before-after-add-update-delete-actions-option-wordpress/" rel="alternate" type="text/html" title="Action hooks that trigger on, before or after add, update or delete actions of option - WordPress" /><published>2020-03-07T00:00:00+05:30</published><updated>2020-03-07T00:00:00+05:30</updated><id>https://sarathlal.com/action-hooks-trigger-on-before-after-add-update-delete-actions-option-wordpress</id><content type="html" xml:base="https://sarathlal.com/action-hooks-trigger-on-before-after-add-update-delete-actions-option-wordpress/">&lt;p&gt;If we need to debug add, update or delete actions on the &lt;code class=&quot;highlighter-rouge&quot;&gt;wp_options&lt;/code&gt; table, we can use below hooks.&lt;/p&gt;

&lt;h3 id=&quot;add_option&quot;&gt;add_option&lt;/h3&gt;

&lt;p&gt;Fires before an option is added.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;add_action('add_option', function( $option_name, $option_value ) {
	//....
}, 10, 2);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;add_option_option&quot;&gt;add_option_{$option}&lt;/h3&gt;

&lt;p&gt;Fires after a specific option has been added.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;add_action('add_option_foo', function( $option_name, $option_value ) {
	 //....
}, 10, 2);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;added_option&quot;&gt;added_option&lt;/h3&gt;

&lt;p&gt;Fires after an option has been added.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;add_action('added_option', function( $option_name, $option_value ) {
		 //....
}, 10, 2);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;update_option&quot;&gt;update_option&lt;/h3&gt;

&lt;p&gt;Fires immediately before an option value is updated.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;add_action('update_option', function( $option_name, $old_value, $new_value ) {
	//....
}, 10, 3);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;update_option_option&quot;&gt;update_option_{$option}&lt;/h3&gt;

&lt;p&gt;FFires after the value of a specific option has been successfully updated.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;add_action('update_option_foo', function( $option_name, $old_value, $new_value ) {
	 //....
}, 10, 3);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;updateed_option&quot;&gt;updateed_option&lt;/h3&gt;

&lt;p&gt;Fires after an option has been successfully updated.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;add_action('updated_option', function( $option_name, $old_value, $new_value ) {
		 //....
}, 10, 3);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;delete_option&quot;&gt;delete_option&lt;/h3&gt;

&lt;p&gt;Fires immediately before an option is deleted.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;add_action('delete_option', function( $option_name ) {
		 //....
}, 10);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;delete_optionoption&quot;&gt;delete_option{$option}&lt;/h3&gt;

&lt;p&gt;Fires after a specific option has been deleted.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;add_action('delete_option_foo', function( $option_name ) {
	 //....
}, 10);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;deleted_option&quot;&gt;deleted_option&lt;/h3&gt;

&lt;p&gt;Fires after an option has been deleted.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;add_action('deleted_option', function( $option_name ) {
		 //....
}, 10);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="WordPress" /><summary type="html">If we need to debug add, update or delete actions on the wp_options table, we can use below hooks.</summary></entry><entry><title type="html">Get all variations of a variable product - WooCommerce</title><link href="https://sarathlal.com/get-all-variations-variable-product-woocommerce/" rel="alternate" type="text/html" title="Get all variations of a variable product - WooCommerce" /><published>2020-03-03T00:00:00+05:30</published><updated>2020-03-03T00:00:00+05:30</updated><id>https://sarathlal.com/get-all-variations-variable-product-woocommerce</id><content type="html" xml:base="https://sarathlal.com/get-all-variations-variable-product-woocommerce/">&lt;p&gt;To get all variations ID of a variable product, we can use the below code snippet.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$product = wc_get_product($product_id);
$variations = $product-&amp;gt;get_available_variations();
$variations_id = wp_list_pluck( $variations, 'variation_id' );
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The above code will provide visible variation IDs only. For example, If the price is not set for a variation, that variation will be hidden.&lt;/p&gt;

&lt;p&gt;Altrenativly we can use the below code snippet to get all variations without considering visibility.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$product = wc_get_product($product_id);
$current_products = $product-&amp;gt;get_children();
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="WooCommerce" /><category term="WordPress" /><summary type="html">To get all variations ID of a variable product, we can use the below code snippet.</summary></entry><entry><title type="html">Generate random string - Python</title><link href="https://sarathlal.com/generate-random-string-python/" rel="alternate" type="text/html" title="Generate random string - Python" /><published>2020-02-28T00:00:00+05:30</published><updated>2020-02-28T00:00:00+05:30</updated><id>https://sarathlal.com/generate-random-string-python</id><content type="html" xml:base="https://sarathlal.com/generate-random-string-python/">&lt;p&gt;Getting a random string is almost required in application development. To get a random string using Python, we can use the below function.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import secrets 
import string

def generate_random_string(length = 6):
	alphabet = string.ascii_uppercase + string.digits
	random_string = ''.join(secrets.choice(alphabet) for i in range(length))
	return random_string

my_string = generate_random_string(8)
print(my_string)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Output&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;QEFBG0G1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="Python" /><summary type="html">Getting a random string is almost required in application development. To get a random string using Python, we can use the below function.</summary></entry><entry><title type="html">Split domain from an email address - Python</title><link href="https://sarathlal.com/split-domain-email-address-python/" rel="alternate" type="text/html" title="Split domain from an email address - Python" /><published>2020-02-24T00:00:00+05:30</published><updated>2020-02-24T00:00:00+05:30</updated><id>https://sarathlal.com/split-domain-email-address-python</id><content type="html" xml:base="https://sarathlal.com/split-domain-email-address-python/">&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;email = 'user@example.com'
domain = email.split('@')[1]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="Python" /><summary type="html">email = 'user@example.com' domain = email.split('@')[1]</summary></entry><entry><title type="html">Get upcoming N days - PHP</title><link href="https://sarathlal.com/get-upcoming-n-days-php/" rel="alternate" type="text/html" title="Get upcoming N days - PHP" /><published>2020-02-19T00:00:00+05:30</published><updated>2020-02-19T00:00:00+05:30</updated><id>https://sarathlal.com/get-upcoming-n-days-php</id><content type="html" xml:base="https://sarathlal.com/get-upcoming-n-days-php/">&lt;p&gt;If you need upcoming N days in PHP, you can use the below code snippet.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function get_upcoming_n_days($days, $format = 'Y-m-d'){
	$m = date(&quot;m&quot;); $de= date(&quot;d&quot;); $y= date(&quot;Y&quot;);
	$dateArray = array();
	for($i=0; $i&amp;lt;=$days-1; $i++){
		$dateArray[] = date($format, mktime(0,0,0,$m,($de+$i),$y)); 
	}
	return $dateArray;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;example&quot;&gt;Example&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$days = get_upcoming_n_days(7);

echo '&amp;lt;pre&amp;gt;';
print_r($days);
echo '&amp;lt;/pre&amp;gt;';
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;output&quot;&gt;Output&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Array {
	[0]=&amp;gt; 2020-02-14
	[1]=&amp;gt; 2020-02-15
	[2]=&amp;gt; 2020-02-16
	[3]=&amp;gt; 2020-02-17
	[4]=&amp;gt; 2020-02-18
	[5]=&amp;gt; 2020-02-19
	[6]=&amp;gt; 2020-02-20
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The default date format will be &lt;code class=&quot;highlighter-rouge&quot;&gt;Y-m-d&lt;/code&gt;. To change that format, add format in the function call as the second parameter.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$days = get_upcoming_n_days(7, 'd/m/Y');
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="PHP" /><summary type="html">If you need upcoming N days in PHP, you can use the below code snippet.</summary></entry><entry><title type="html">Split time in to time slots - PHP</title><link href="https://sarathlal.com/split-time-into-time-slots-php/" rel="alternate" type="text/html" title="Split time in to time slots - PHP" /><published>2020-02-14T00:00:00+05:30</published><updated>2020-02-14T00:00:00+05:30</updated><id>https://sarathlal.com/split-time-into-time-slots-php</id><content type="html" xml:base="https://sarathlal.com/split-time-into-time-slots-php/">&lt;p&gt;If you need to split time into time slots with a proper time interval, you can use the below code snippet.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function prepare_time_slots($starttime, $endtime, $duration){
	 
	$time_slots = array();
	$start_time    = strtotime($starttime); //change to strtotime
	$end_time      = strtotime($endtime); //change to strtotime
	 
	$add_mins  = $duration * 60;
	 
	while ($start_time &amp;lt;= $end_time) // loop between time
	{
	   $time_slots[] = date(&quot;H:i&quot;, $start_time);
	   $start_time += $add_mins; // to check endtime
	}

	return $time_slots;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;example&quot;&gt;Example&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$starttime = '9:00';  // your start time
$endtime = '21:00';  // End time
$duration = '30';  // split by 30 mins

$time_slots = prepare_time_slots($starttime, $endtime, $duration);

echo '&amp;lt;pre&amp;gt;';
print_r($time_slots);
echo '&amp;lt;/pre&amp;gt;';
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;output&quot;&gt;Output&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Array
(
	[0] =&amp;gt; 09:00
	[1] =&amp;gt; 09:30
	[2] =&amp;gt; 10:00
	[3] =&amp;gt; 10:30
	[4] =&amp;gt; 11:00
	[5] =&amp;gt; 11:30
	[6] =&amp;gt; 12:00
	[7] =&amp;gt; 12:30
	[8] =&amp;gt; 13:00
	[9] =&amp;gt; 13:30
	[10] =&amp;gt; 14:00
	[11] =&amp;gt; 14:30
	[12] =&amp;gt; 15:00
	[13] =&amp;gt; 15:30
	[14] =&amp;gt; 16:00
	[15] =&amp;gt; 16:30
	[16] =&amp;gt; 17:00
	[17] =&amp;gt; 17:30
	[18] =&amp;gt; 18:00
	[19] =&amp;gt; 18:30
	[20] =&amp;gt; 19:00
	[21] =&amp;gt; 19:30
	[22] =&amp;gt; 20:00
	[23] =&amp;gt; 20:30
	[24] =&amp;gt; 21:00
)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="PHP" /><summary type="html">If you need to split time into time slots with a proper time interval, you can use the below code snippet.</summary></entry><entry><title type="html">Add / change default user password in PostgreSQL</title><link href="https://sarathlal.com/add-change-default-user-password-postgresql/" rel="alternate" type="text/html" title="Add / change default user password in PostgreSQL" /><published>2020-02-11T00:00:00+05:30</published><updated>2020-02-11T00:00:00+05:30</updated><id>https://sarathlal.com/add-change-default-user-password-postgresql</id><content type="html" xml:base="https://sarathlal.com/add-change-default-user-password-postgresql/">&lt;p&gt;In most Unix distributions, the default Postgres user neither requires nor uses a password for authentication. But if you like to set a password for the user, you can follow the below steps.&lt;/p&gt;

&lt;h2 id=&quot;login-to-cli-as-the-default-user&quot;&gt;Login to CLI as the default user&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo -u postgres psql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;change-password&quot;&gt;Change password&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ALTER USER postgres PASSWORD 'myPassword';
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="PostgreSQL" /><summary type="html">In most Unix distributions, the default Postgres user neither requires nor uses a password for authentication. But if you like to set a password for the user, you can follow the below steps.</summary></entry><entry><title type="html">Install PostgreSQL 11 on Debian 10 (Buster)</title><link href="https://sarathlal.com/install-postgresql-11-debian-10-buster/" rel="alternate" type="text/html" title="Install PostgreSQL 11 on Debian 10 (Buster)" /><published>2020-02-07T00:00:00+05:30</published><updated>2020-02-07T00:00:00+05:30</updated><id>https://sarathlal.com/install-postgresql-11-debian-10-buster</id><content type="html" xml:base="https://sarathlal.com/install-postgresql-11-debian-10-buster/">&lt;h2 id=&quot;setup-postgresql-ppa&quot;&gt;Setup PostgreSQL PPA&lt;/h2&gt;

&lt;p&gt;First, import PostgreSQL packages signing key on our system.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | sudo apt-key add -
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now add PostgreSQL apt repository.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo sh -c 'echo &quot;deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main&quot; &amp;gt;&amp;gt; /etc/apt/sources.list.d/pgdg.list'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;install-postgresql&quot;&gt;Install PostgreSQL&lt;/h2&gt;

&lt;p&gt;Update the repository list &amp;amp; install PostgreSQL.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install postgresql postgresql-contrib
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;turn-on-postgresql-server&quot;&gt;Turn on PostgreSQL server&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl start postgresql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;login-to-postgresql-cli-as-user-postgres&quot;&gt;Login to PostgreSQL CLI as user postgres&lt;/h2&gt;

&lt;p&gt;After installing the PostgreSQL database server by default, it creates a user ‘postgres’ with the role ‘postgres’. It also creates a system account with the same name ‘postgres’.&lt;/p&gt;

&lt;p&gt;So now login to our system as user postgres and connect the database.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo -u postgres psql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To exit from PostgreSQL database CLI interface, use the below command.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;\q
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="PostgreSQL" /><category term="Debian 10" /><summary type="html">Setup PostgreSQL PPA</summary></entry><entry><title type="html">Create database, user &amp;amp; allow access - PostgreSQL</title><link href="https://sarathlal.com/create-database-user-allow-access-postgresql/" rel="alternate" type="text/html" title="Create database, user &amp; allow access - PostgreSQL" /><published>2020-02-02T00:00:00+05:30</published><updated>2020-02-02T00:00:00+05:30</updated><id>https://sarathlal.com/create-database-user-allow-access-postgresql</id><content type="html" xml:base="https://sarathlal.com/create-database-user-allow-access-postgresql/">&lt;h2 id=&quot;creating-user&quot;&gt;Creating user&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo -u postgres createuser &amp;lt;username&amp;gt;	 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;creating-database&quot;&gt;Creating Database&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo -u postgres createdb &amp;lt;dbname&amp;gt;	 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;access-postgresql-command-line-interface&quot;&gt;Access PostgreSQL command-line interface&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo -u postgres psql	 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;giving-the-user-a-password&quot;&gt;Giving the user a password&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;alter user &amp;lt;username&amp;gt; with encrypted password '&amp;lt;password&amp;gt;';	 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;granting-privileges-on-database&quot;&gt;Granting privileges on database&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;psql=# grant all privileges on database &amp;lt;dbname&amp;gt; to &amp;lt;username&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="PostgreSQL" /><summary type="html">Creating user</summary></entry><entry><title type="html">Redirect single pages of post type in to post type archive page - WordPress</title><link href="https://sarathlal.com/redirect-single-pages-to-post-type-archive-page-wordpress/" rel="alternate" type="text/html" title="Redirect single pages of post type in to post type archive page - WordPress" /><published>2019-08-03T00:00:00+05:30</published><updated>2019-08-03T00:00:00+05:30</updated><id>https://sarathlal.com/redirect-single-pages-to-post-type-archive-page-wordpress</id><content type="html" xml:base="https://sarathlal.com/redirect-single-pages-to-post-type-archive-page-wordpress/">&lt;p&gt;In WordPress, if our post type is public, in default, a single page view will be available for all posts in that post type.&lt;/p&gt;

&lt;p&gt;If we don’t need a single view of post type, it is better to make post type, not as public. In &lt;code class=&quot;highlighter-rouge&quot;&gt;register_post_type&lt;/code&gt; hook, there is an argument called &lt;code class=&quot;highlighter-rouge&quot;&gt;public&lt;/code&gt; &amp;amp; we have to set that value as false.&lt;/p&gt;

&lt;p&gt;But now I need to make one of my custom post types as public &amp;amp; the same time, I need to remove the single page view of that custom post type. Below you can find the code snippet that I have used for that purpose.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;add_action( 'template_redirect', function() {
	$post_type = 'board_member';
	if ( is_singular($post_type) ) {
		global $post;
		$redirectLink = get_post_type_archive_link( $post_type );
		wp_redirect( $redirectLink, 302 );
		exit;
	}
});
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="WordPress" /><summary type="html">In WordPress, if our post type is public, in default, a single page view will be available for all posts in that post type.</summary></entry></feed>